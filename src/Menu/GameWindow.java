/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Menu;

import Othello_p.OthelloScoreKeeper;
import java.awt.Dimension;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Chris Wells
 */
public class GameWindow extends javax.swing.JFrame implements MouseListener{

    /**
     * Creates new form MainMenu2
     */
    MenuController menuCon;
    OthelloScoreKeeper scoreKeep;
    WinningFrame win;
    boolean exitDisabled = false;
    
    public GameWindow(MenuController mc){
        menuCon = mc;
        initComponents();
        scoreKeep = othelloGrid2.passScoreKeeper();
        othelloGrid2.passMouseListeners(this);
        backPanel.setImage("backGround.png");
        whiteNumScore.setText(""+scoreKeep.getPointWhite());
        blackNumScore.setText(""+scoreKeep.getPointBlack());
        
    }
    
    public void setBackGround(String imgLoc){
        backPanel.setImage(imgLoc);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backPanel = new Menu.imagePanel();
        btnExit = new javax.swing.JLabel();
        othelloGrid2 = new OthelloGrid.OthelloGrid(menuCon.sizeOfBoard, menuCon.blackAI, menuCon.whiteAI);
        scorePanel = new imagePanel("blank.png");
        playerBlack = new imagePanel("black.png");
        playerWhite = new imagePanel("white.png");
        lblBlackScore = new javax.swing.JLabel();
        lblWhiteScore = new javax.swing.JLabel();
        whiteNumScore = new javax.swing.JLabel();
        blackNumScore = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(menuCon.defaultSize);
        setResizable(false);
        setUndecorated(true);

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/btnExit.png"))); // NOI18N
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnExitMousePressed(evt);
            }
        });

        playerBlack.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout playerBlackLayout = new javax.swing.GroupLayout(playerBlack);
        playerBlack.setLayout(playerBlackLayout);
        playerBlackLayout.setHorizontalGroup(
            playerBlackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 98, Short.MAX_VALUE)
        );
        playerBlackLayout.setVerticalGroup(
            playerBlackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 98, Short.MAX_VALUE)
        );

        playerWhite.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout playerWhiteLayout = new javax.swing.GroupLayout(playerWhite);
        playerWhite.setLayout(playerWhiteLayout);
        playerWhiteLayout.setHorizontalGroup(
            playerWhiteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 98, Short.MAX_VALUE)
        );
        playerWhiteLayout.setVerticalGroup(
            playerWhiteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 98, Short.MAX_VALUE)
        );

        lblBlackScore.setFont(new java.awt.Font("Comic Sans MS", 1, 36)); // NOI18N
        lblBlackScore.setText("Score");

        lblWhiteScore.setFont(new java.awt.Font("Comic Sans MS", 1, 36)); // NOI18N
        lblWhiteScore.setForeground(new java.awt.Color(255, 255, 255));
        lblWhiteScore.setText("Score");

        whiteNumScore.setFont(new java.awt.Font("Comic Sans MS", 1, 36)); // NOI18N
        whiteNumScore.setForeground(new java.awt.Color(255, 255, 255));
        whiteNumScore.setText("XX");

        blackNumScore.setFont(new java.awt.Font("Comic Sans MS", 1, 36)); // NOI18N
        blackNumScore.setText("XX");

        javax.swing.GroupLayout scorePanelLayout = new javax.swing.GroupLayout(scorePanel);
        scorePanel.setLayout(scorePanelLayout);
        scorePanelLayout.setHorizontalGroup(
            scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scorePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(scorePanelLayout.createSequentialGroup()
                        .addComponent(playerWhite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(playerBlack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scorePanelLayout.createSequentialGroup()
                        .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblWhiteScore)
                            .addComponent(whiteNumScore))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(blackNumScore)
                            .addComponent(lblBlackScore))))
                .addContainerGap())
        );
        scorePanelLayout.setVerticalGroup(
            scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scorePanelLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerBlack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerWhite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWhiteScore)
                    .addComponent(lblBlackScore))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(whiteNumScore)
                    .addComponent(blackNumScore))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout backPanelLayout = new javax.swing.GroupLayout(backPanel);
        backPanel.setLayout(backPanelLayout);
        backPanelLayout.setHorizontalGroup(
            backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backPanelLayout.createSequentialGroup()
                .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backPanelLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(scorePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(othelloGrid2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(backPanelLayout.createSequentialGroup()
                        .addContainerGap(691, Short.MAX_VALUE)
                        .addComponent(btnExit)))
                .addGap(55, 55, 55))
        );
        backPanelLayout.setVerticalGroup(
            backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backPanelLayout.createSequentialGroup()
                        .addComponent(othelloGrid2, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 134, Short.MAX_VALUE)
                        .addComponent(btnExit)
                        .addGap(32, 32, 32))
                    .addGroup(backPanelLayout.createSequentialGroup()
                        .addComponent(scorePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-800)/2, (screenSize.height-640)/2, 800, 640);
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMousePressed
        // TODO add your handling code here:
        if(!exitDisabled){
            menuCon.closeGameWindow();
            menuCon.loadMainMenu();
        }
    }//GEN-LAST:event_btnExitMousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Menu.imagePanel backPanel;
    private javax.swing.JLabel blackNumScore;
    private javax.swing.JLabel btnExit;
    private javax.swing.JLabel lblBlackScore;
    private javax.swing.JLabel lblWhiteScore;
    private OthelloGrid.OthelloGrid othelloGrid2;
    private Menu.imagePanel playerBlack;
    private Menu.imagePanel playerWhite;
    private Menu.imagePanel scorePanel;
    private javax.swing.JLabel whiteNumScore;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mousePressed(MouseEvent e) {
        whiteNumScore.setText(""+scoreKeep.getPointWhite());
        blackNumScore.setText(""+scoreKeep.getPointBlack());

        if(scoreKeep.isEndOfGame())
        {
            if(scoreKeep.getPointBlack() > scoreKeep.getPointWhite())
                win = new WinningFrame(menuCon, 1);
            else if (scoreKeep.getPointWhite() > scoreKeep.getPointBlack())
                win = new WinningFrame(menuCon, 2);
            else
                win = new WinningFrame(menuCon, 0);
            exitDisabled = true;
            win.setVisible(true);
        }
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void mouseExited(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }
}
